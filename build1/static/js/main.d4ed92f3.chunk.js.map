{"version":3,"sources":["logo.svg","components/navbar.js","components/login.js","components/note.js","components/notesContainer.js","components/router.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Navbar","removeUser","localStorage","removeItem","_this","forceUpdate","getItem","react_default","a","createElement","className","style","display","justifyContent","Link","to","class","aria-hidden","color","fontSize","onClick","this","Redirect","Component","LoginScreen","props","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","ChangeInput","event","setState","defineProperty","target","placeholder","value","Submit","e","preventDefault","console","log","state","fetch","host","port","path","method","type","headers","Accept","Content-Type","body","JSON","stringify","username","Username","password","Password","then","response","json","res","login","setItem","redirect","message","catch","alignItems","flexDirection","height","id","onSubmit","alignItem","marginTop","onChange","required","margin","Note","background","boxShadow","borderRadius","comment","delete","NotesContainer","context","deleteNote","item","index","notes","assign","notearraynotdone","splice","doneNote","notesref","notesdone","notearraydone","push","addNote","bind","assertThisInitialized","_this2","note","_this3","paddingTop","padding","$","val","border","flexGrow","marginLeft","bacground","map","components_note","done","Router","Switch","Route","exact","component","App","BrowserRouter","router","components_navbar","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d4ed92f3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\nimport './navbar.css';\nimport { Link, Redirect } from 'react-router-dom'\n\n\n\nclass Navbar extends Component {\n\n  removeUser = () => {\n    localStorage.removeItem('login')\n    this.forceUpdate()\n  }\n\n\n  render() {\n\n    if (!localStorage.getItem('login') || !localStorage.getItem('login') == true) {\n      return(\n        <Redirect to='/login' />\n      )\n    } else {\n    return(\n        <nav className=\"navbar fixed-bottom \" style={{display: \"flex\",justifyContent: \"space-around\" }}>\n        <Link to={\"/notes\"} ><i class=\"fa fa-list\" aria-hidden=\"true\"></i></Link>\n          <i style={{color: \"hsl(0, 100%, 73%)\", fontSize: \"20px\"}} class=\"fas fa-sign-out-alt    loguit\"onClick={this.removeUser}></i>\n        </nav>\n    ) \n    }\n  }\n}\n\nexport default Navbar;\n","import React, { Component } from 'react';\nimport './login.css'\nimport { Redirect } from 'react-router-dom'\n\nclass LoginScreen extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            Username: \"\",\n            Password: \"\",\n            redirect: false\n        }\n    }\n\n    ChangeInput = (event) => {\n        this.setState({[event.target.placeholder]: event.target.value})\n    }\n\n    Submit = (e) => {\n        e.preventDefault()\n        console.log(this.state)\n        fetch(\"http://localhost:5000/login\" , {\n            host: 'localhost',\n            port: 5000,\n            path: '/login',\n            method: 'POST',\n            type: 'application/json',\n            headers: {\n                \"Accept\": \"application/json\",\n                \"Content-Type\" : \"application/json\"\n            },\n            body: JSON.stringify({\n                \"username\": this.state.Username,\n                \"password\": this.state.Password,\n            })\n        })\n        .then((response) => response.json())\n        .then((res) => {\n            console.log(res)\n                if (res.login === true) {\n                    localStorage.setItem('login', true)\n                    localStorage.setItem('username', this.state.Username)\n                    this.setState({redirect: true})\n                } else {\n                    console.log(res.message);\n                }\n            })\n            .catch(e => console.log(e));\n    }\n\n    \n    render() {\n\n        if (this.state.redirect) {\n            return (<Redirect to='/notes' />)\n        } else {\n        return(\n            <div className=\"container\" style={{display: \"flex\",  alignItems: \"center\", flexDirection: \"column\",  height: \"100vh\"}}>\n                <form id=\"loginform\" onSubmit={this.Submit} style={{display: \"flex\", flexDirection: \"column\", alignItem: \"center\"}}>\n                <input type=\"username\" placeholder=\"Username\" style={{marginTop: \"30vh\"}} onChange={this.ChangeInput} required=\"true\"></input>\n                <input type=\"password\" placeholder=\"Password\" style={{margin: \"0\"}} onChange={this.ChangeInput} required=\"true\"></input>\n                <button type=\"submit\"><i class=\"fas fa-user\"></i></button>\n                </form>\n            </div>\n        )\n        }\n    }\n}\n\nexport default LoginScreen;","import React, { Component } from 'react';\nimport './note.css'\n\nclass Note extends Component {\n    render() {\n        return(\n            <div style={{margin: \"10px 0\", background: \"white\", display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\",    boxShadow: \"0px 4px 14px -2px rgba(107,107,107,0.20)\", borderRadius: \"2px\", height: \"60px\"}} >\n                <p style={{margin: \"5px 20px\", fontSize: \"0.9em\", color: \"Grey\"}}>{this.props.comment}</p>\n                <div style={{margin: \"0px 10px\"}}>\n                    {/* <button id=\"donebutton\" onClick={this.props.done}> <i class=\"fas fa-check\"></i></button> */}\n                    <button id=\"deletebutton\" onClick={this.props.delete}> <i class=\"fas fa-times-circle\"></i></button>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Note;","import React, { Component } from 'react';\nimport Note from './note.js';\nimport '../App.css'\nimport './tabbar.css'\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport DirectionsIcon from '@material-ui/icons/Directions';\nimport $ from 'jquery';\n\n\nclass NotesContainer extends Component {\n\n    constructor(props, context) {\n        super(props, context)\n        this.state = {\n            notearraynotdone: [],\n            notearraydone: [],\n            username: ''\n        }\n        this.addNote = this.addNote.bind(this)\n    }\n\n    componentWillMount() {\n        this.setState({username: localStorage.getItem('username')})\n    }\n\n    componentDidMount() {\n        fetch(\"http://localhost:5000/getnotes\" , {\n            host: 'localhost',\n            port: 5000,\n            path: '/notes',\n            method: 'POST',\n            type: 'application/json',\n            headers: {\n                \"Accept\": \"application/json\",\n                \"Content-Type\" : \"application/json\"\n            },\n            body: JSON.stringify({\n                \"username\": this.state.username,\n            })\n        })\n        .then((response) => response.json())\n        .then((res) => {\n                this.setState({notearraynotdone: res})\n            })\n            .catch(e => console.log(e));\n    }\n\n    addNote(e, note) {\n        e.preventDefault()\n        if(note)\n {       var notes = Object.assign([], this.state.notearraynotdone);\n        notes.push(note);\n        this.setState({notearraynotdone: notes})\n        fetch(\"http://localhost:5000/notes\" , {\n            host: 'localhost',\n            port: 5000,\n            path: '/notes',\n            method: 'POST',\n            type: 'application/json',\n            headers: {\n                \"Accept\": \"application/json\",\n                \"Content-Type\" : \"application/json\"\n            },\n            body: JSON.stringify({\n                \"username\": this.state.username,\n                \"note\": note,\n            })\n        })\n        .then((response) => response.json())\n        .then((res) => {\n        \n            })\n            .catch(e => console.log(e));\n\n            this.forceUpdate()}\n    }\n\n    deleteNote = (item, index) => {\n        var notes = Object.assign([], this.state.notearraynotdone);\n        console.log(index)\n        notes.splice(index, 1);\n        this.setState({notearraynotdone: notes})\n        fetch(\"http://localhost:5000/deletenotes\" , {\n            host: 'localhost',\n            port: 5000,\n            path: '/notes',\n            method: 'DELETE',\n            type: 'application/json',\n            headers: {\n                \"Accept\": \"application/json\",\n                \"Content-Type\" : \"application/json\"\n            },\n            body: JSON.stringify({\n                \"username\" : this.state.username,\n                \"notes\": item,\n            })\n        })\n        .then((response) => response.json())\n        .then((res) => {\n        \n            })\n            .catch(e => console.log(e));\n\n            this.forceUpdate()\n    }\n\n    doneNote = (index) => {\n        var notes = Object.assign([], this.state.notearraynotdone);\n        var notesref = Object.assign([], this.state.notearraynotdone);\n        notes.splice(index, 1);\n        this.setState({notearraynotdone: notes})\n        var notesdone = Object.assign([], this.state.notearraydone);\n        notesdone.push(notesref[index])\n        this.setState({notearraydone: notesdone})\n    }\n\n\n\n    render() {\n    return(\n       <div className=\"container\" style={{paddingTop: \"100px\"}}>   \n              <nav className=\"navbar fixed-top\" style={{background: \"hsl(0, 100%, 73%)\", padding: \"20px\", borderRadius: \"0 0 10px 10px\", boxShadow: \"0px 4px 14px -2px rgba(107,107,107,0.20)\"}}>\n                    <form className=\"container\" style={{display: \"flex\", justifyContent: \"space-around\",  borderRadius: \"17px\"}} onSubmit={(e) => {this.addNote(e, $(\"input\").val()); $(\"input\").val(\"\") }}>\n                    <input style={{ border: \"none\", borderRadius: \"4px\" , height: \"40px\", flexGrow: \"1\", color: \"grey\"}}>\n                    </input>\n                    <button type=\"submit\" style={{marginLeft: \"13px\", fontSize:\"23px\", color: \"hsl(0, 100%, 73%)\", border: \"none\", bacground: \"White\"}} ><i class=\"fa fa-plus-circle\" aria-hidden=\"true\" ></i></button>\n                    </form>\n        </nav>\n        <div style={{display: \"flex\",alignItems: \"left\"}}>\n            <p style={{marginLeft: \"7px\", color: \"grey\"}}>Hallo, {this.state.username}</p>\n        </div>\n           {\n               this.state.notearraynotdone.map((item, index) => {\n                   return (<Note comment={item} delete={this.deleteNote.bind(this, item, index)} done={this.doneNote.bind(this, index)}/>)\n               })\n           }\n           {/* <hr style={{width: \"40%\", }} />\n           {\n               this.state.notearraydone.map((item, index) => {\n                   return (<Note comment={item} />)\n               })\n           } */}\n \n       </div>\n    ) \n  }\n}\n\nexport default NotesContainer;\n","import { BrowserRouter, Route, Link, Switch } from 'react-router-dom';\nimport React from 'react';\nimport LoginScreen from './login.js';\nimport NotesContainer from './notesContainer.js'\n\nconst Router = () => (\n  <Switch>\n    <Route exact path=\"/\" component={LoginScreen} />\n    <Route path=\"/notes\" component={NotesContainer} />\n    <Route path=\"/login\" component={LoginScreen} />\n\n  </Switch>\n)\n\nexport default Router;\n\n\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport './components/tabbar.css'\nimport Navbar from './components/navbar.js';\nimport LoginScreen from './components/login.js';\nimport NotesContainer from './components/notesContainer.js';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport DirectionsIcon from '@material-ui/icons/Directions';\nimport Router from './components/router.js'\nimport { BrowserRouter } from 'react-router-dom';\n\n\n\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n      <div className=\"App\">\n          <Router />\n          <Navbar />\n\n      </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}